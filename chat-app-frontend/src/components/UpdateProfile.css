.update {
  display: flex;
  flex-direction: column;
}
.update__header {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px;
}
.update__header__img {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.update__img__avatar {
  width: 200px;
  height: 200px;
  border-radius: 50%;
}
.update__header__name {
  padding: 20px;
  position: relative;
}
.update__editName__btn {
  position: absolute;
  top: 0;
  left: 100%;
  transform: translate(-50%, -50%);
  border: 1.5px solid black;
  border-radius: 50%;
  padding: 4px;
  cursor: pointer;
}
.update__editName__btn:hover {
  background: rgba(67, 168, 250, 0.322);
}
.update__name__inputs {
  display: flex;
  flex-direction: column;
}
.update__name__inputs > input {
  border-radius: 4px;
  padding: 15px 20px;
  border: none;
  margin: 5px;
  background: transparent !important;
  /* box-shadow: -1px 1px 4px 0px rgb(0 0 0 / 42%); */
  font-size: 30px;
  outline: none;
}
.import__img_btn {
  margin: 10px;
  padding: 10px 20px;
  cursor: pointer;
  border-radius: 4px;
  background: white;
  text-transform: uppercase;
  font-family: "Roboto", "Helvetica", "Arial", sans-serif;
  font-weight: 400;
  border: none;
  transition: box-shadow 0.2s;
}
.save_btn {
  padding: 15px 20px;
  box-shadow: 3px 0px 10px -2px rgba(0, 0, 0, 0.2),
    0px 1px 5px 0px rgba(0, 0, 0, 0.12);
  transition: box-shadow 0.2s;
  align-self: flex-end;
  margin-right: 35px;
  margin-top: 30px;
}
.import__img_btn:hover,
.save_btn:hover {
  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),
    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
}
.update__body {
  display: flex;
  flex-direction: column;
  width: 70%;
  margin: 20px auto;
}
.update__body__header {
  display: flex;
}
.MuiButton-containedPrimary:hover {
  background: cornflowerblue !important;
  color: white !important;
  margin-left: auto !important;
}
.update__body > form {
  display: flex;
  flex-direction: column;
}
.update__form {
  margin: 20px 0;
}
/* INPUT */
:root {
  /* generic */
  --gutterSm: 0.4rem;
  --gutterMd: 0.2rem;
  --gutterLg: 1.6rem;
  --gutterXl: 2.4rem;
  --gutterXx: 7.2rem;
  --colorPrimary400: #7e57c2;
  --colorPrimary600: #5e35b1;
  --colorPrimary800: #4527a0;
  --fontFamily: "Dosis", sans-serif;
  --fontSizeSm: 1.2rem;
  --fontSizeMd: 1.6rem;
  --fontSizeLg: 1.2rem;
  --fontSizeXl: 2.8rem;
  --fontSizeXx: 3.6rem;
  --lineHeightSm: 1.1;
  --lineHeightMd: 1.8;
  --transitionDuration: 300ms;
  --transitionTF: cubic-bezier(0.645, 0.045, 0.355, 1);
  /* floated labels */
  --inputPaddingV: var(--gutterMd);
  --inputPaddingH: var(--gutterLg);
  --inputFontSize: var(--fontSizeLg);
  --inputLineHeight: var(--lineHeightMd);
  --labelScaleFactor: 0.8;
  --labelDefaultPosY: 50%;
  --labelTransformedPosY: calc(
    (var(--labelDefaultPosY)) - (var(--inputPaddingV) * var(--labelScaleFactor)) -
      (var(--inputFontSize) * var(--inputLineHeight))
  );
  --inputTransitionDuration: var(--transitionDuration);
  --inputTransitionTF: var(--transitionTF);
}

.Input,
.Input-text,
.Input-label,
.Input,
.Input-text,
.Input-label::before,
.Input,
.Input-text,
.Input-label::after {
  box-sizing: border-box;
}

.Input {
  position: relative;
}

.Input-text {
  display: block;
  margin: 0;
  padding: var(--inputPaddingV) var(--inputPaddingH);
  color: inherit;
  width: 100%;
  font-family: inherit;
  font-size: var(--inputFontSize);
  font-weight: inherit;
  line-height: var(--inputLineHeight);
  border: 1px solid rgba(128, 128, 128, 0.212);
  border-radius: 0.4rem;
  -webkit-transition: box-shadow var(--transitionDuration);
  transition: box-shadow var(--transitionDuration);
}

.Input-text::placeholder {
  color: #77858b;
}

.Input-text:focus {
  outline: none;
  /* box-shadow: 0.2rem 0.8rem 1.6rem var(--colorPrimary600); */
  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),
    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
}

.Input-label {
  display: block;
  position: absolute;
  bottom: 30%;
  left: 0.8rem;
  color: black;
  font-family: inherit;
  font-size: 18px;
  font-weight: 200;
  line-height: var(--inputLineHeight);
  opacity: 0;
  -webkit-transform: translate3d(0, var(--labelDefaultPosY), 0) scale(1);
  transform: translate3d(0, var(--labelDefaultPosY), 0) scale(1);
  -webkit-transform-origin: 0 0;
  transform-origin: 0 0;
  -webkit-transition: opacity var(--inputTransitionDuration)
      var(--inputTransitionTF),
    visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF),
    z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF),
    -webkit-transform var(--inputTransitionDuration) var(--inputTransitionTF);
  transition: opacity var(--inputTransitionDuration) var(--inputTransitionTF),
    visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF),
    z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF),
    -webkit-transform var(--inputTransitionDuration) var(--inputTransitionTF);
  transition: opacity var(--inputTransitionDuration) var(--inputTransitionTF),
    transform var(--inputTransitionDuration) var(--inputTransitionTF),
    visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF),
    z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF);
  transition: opacity var(--inputTransitionDuration) var(--inputTransitionTF),
    transform var(--inputTransitionDuration) var(--inputTransitionTF),
    visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF),
    z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF),
    -webkit-transform var(--inputTransitionDuration) var(--inputTransitionTF);
}

.Input-text:placeholder-shown + .Input-label {
  visibility: hidden;
  z-index: -1;
}

.Input-text:not(:placeholder-shown) + .Input-label,
.Input-text:focus:not(:placeholder-shown) + .Input-label {
  visibility: visible;
  z-index: 1;
  opacity: 1;
  -webkit-transform: translate3d(0, var(--labelTransformedPosY), 0)
    scale(var(--labelScaleFactor));
  transform: translate3d(0, var(--labelTransformedPosY), 0)
    scale(var(--labelScaleFactor));
  -webkit-transition: visibility 0ms, z-index 0ms,
    -webkit-transform var(--inputTransitionDuration);
  transition: visibility 0ms, z-index 0ms,
    -webkit-transform var(--inputTransitionDuration);
  transition: transform var(--inputTransitionDuration), visibility 0ms,
    z-index 0ms;
  transition: transform var(--inputTransitionDuration), visibility 0ms,
    z-index 0ms, -webkit-transform var(--inputTransitionDuration);
}

.select-gov {
  margin: 30px 0;
  padding: var(--inputPaddingV) var(--inputPaddingH);
  color: inherit;
  width: 85%;
  font-family: inherit;
  font-size: var(--inputFontSize);
  font-weight: inherit;
  line-height: var(--inputLineHeight);
  border: 1px solid rgba(128, 128, 128, 0.212);
  border-radius: 0.4rem;
  -webkit-transition: box-shadow var(--transitionDuration);
  transition: box-shadow var(--transitionDuration);
}
.Inputs {
  padding: 3.2px 25.6px;
  /* width: 100%; */
  display: flex;
  align-items: center;
}

.select-container {
  flex-basis: 65%;
  margin-right: 10px;
}
.date_of_birth_input,
.bio_textarea,
.select-container select {
  padding: 10px;
  border: 1px solid rgba(128, 128, 128, 0.212);
  border-radius: 0.4rem;
  font-size: var(--inputFontSize);
  background: white;
  outline: none;
}
.select-container select {
  width: 100%;
}
.date_of_birth_input {
  flex-basis: 27%;
  padding: 4px 10px;
}
.bio_textarea {
  width: 96%;
  margin-top: 30px;
}
